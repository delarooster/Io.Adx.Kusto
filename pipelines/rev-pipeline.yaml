parameters:
  - name: adxCluster
    type: string
  - name: adxDatabase
    type: string
  - name: variableGroup
    type: string

stages:
- stage:  rev_engineer
  displayName:  Reverse Engineer Database
  variables:  []
  jobs:
  - job:  delta_kusto
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      - name: clusterUri
        value: "https://${{ parameters.adxCluster }}.kusto.windows.net"
      - group: ${{ parameters.variableGroup }}
    steps:
    - checkout: self
      clean: true
    - bash:  |
        # Fails if one of the command fails in the script
        set -e
        clientVersion=$(curl https://delta-kusto.azurefd.net/clientVersion/unique?fromClientVersion=0)
        # Display the version on console
        echo "Client Version:  $clientVersion"
        wget https://github.com/microsoft/delta-kusto/releases/download/$clientVersion/delta-kusto-linux.tar.gz
        tar --extract --file delta-kusto-linux.tar.gz
        chmod +x ./delta-kusto
      displayName:  Install Delta-Kusto
    - bash:  |
        # Fails if one of the command fails in the script
        set -e
        mkdir pipelines/kql-scripts
        mkdir pipelines/kql-scripts/complete
        echo "Printout after creating folders --> "
        ls -R .
      displayName:  Prep script folder
    - bash:  |
        # Fails if one of the command fails in the script
        set -e

        clusterUri="${{ variables.clusterUri}}"
        echo "Cluster URI:  $clusterUri"

        adxDatabase="${{ parameters.adxDatabase }}"
        echo "Adx Database: $adxDatabase"

        scriptFolder="$(System.DefaultWorkingDirectory)/pipelines"
        echo "Script folder:  $scriptFolder"

        # Package the login in a JSON payload
        #login='{"tenantId":"$(tenant_id)","clientId":"$(kustoClientId)","secret":"$(kustoClientPw)"}'

        ./delta-kusto -p $scriptFolder/rev-engineer-parameters.yaml \
                      -o jobs.download-dev.target.adx.clusterUri="$clusterUri" \
                      jobs.download-dev.target.adx.database="$adxDatabase" \
                      jobs.delta-dev.target.adx.clusterUri="$clusterUri" \
                      jobs.delta-dev.target.adx.database="$adxDatabase" \
                      tokenProvider.login.tenantId="$(tenant_id)" \
                      tokenProvider.login.clientId="$(kustoClientId)" \
                      tokenProvider.login.secret="$(kustoClientPw)"

      displayName:  Run Delta-Kusto
    # Publish artefact:  https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/pipeline-artifacts#publish-artifacts
    - publish: pipelines/kql-scripts
      artifact:  kql-scripts
      displayName: 'Publish Artifact: kql-scripts'